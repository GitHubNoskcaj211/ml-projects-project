on:
  push:
    branches: main

jobs:
  BuildAndDeployBackend:
    env:
      PROJECT_ID: steam-game-recommender-415605
      REGION: us-central1
      APP: backend
      ML_APP: ml-backend
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    steps:
      - name: Delete unnecessary tools folder
        run: rm -rf /opt/hostedtoolcache

      - name: Set HF Token
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: |
          git config --global url."https://noskcaj211:${HF_TOKEN}@huggingface.co/".insteadOf "https://huggingface.co/"

      - name: 'Checkout'
        uses: 'actions/checkout@v4'
        with:
          submodules: true

      - name: 'Google auth'
        id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: ${{ secrets.SERVICE_ACCOUNT_CREDENTIALS }}

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'
        with:
          project_id: '${{ env.PROJECT_ID }}'

      - name: Clone LFS Submodules
        run: |
          git -C dataset/data_files lfs pull origin 4ca677daf973bb180fe063ac89c2ff8248cdc283
          git -C models/published_recommendation_models lfs pull origin e66d08f3f9aa8df2b68a77aa7b79cee954d12c38

      - name: 'Docker auth'
        run: |-
          gcloud auth configure-docker gcr.io

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Backend Container
        uses: docker/build-push-action@v5
        with:
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: gcr.io/${{ env.PROJECT_ID }}/${{ env.APP }}/${{ env.APP }}:${{ github.sha }}
          file: go_backend/Dockerfile
          build-args: |
            FLASK_BACKEND_URL=${{ secrets.FLASK_BACKEND_URL }}
            FLASK_FRONTEND_URL=${{ secrets.FLASK_FRONTEND_URL }}
            FLASK_SECRET_KEY=${{ secrets.FLASK_SECRET_KEY }}
            FLASK_STEAM_WEB_API_KEY=${{ secrets.FLASK_STEAM_WEB_API_KEY }}
            GOOGLE_APPLICATION_CREDENTIALS=""
            VERSION="0.0"
            NAME="go_backend"
            ROOT_FOLDER="./"
          push: true

      - name: 'Create release name'
        run: |-
          echo "RELEASE_NAME=${{ env.APP }}-${GITHUB_SHA::7}-${GITHUB_RUN_NUMBER}" >> ${GITHUB_ENV}

      - name: 'Deploy Backend Cloud Release'
        uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          service: '${{ env.APP }}'
          region: '${{ env.REGION }}'
          tag: '${{ env.RELEASE_NAME }}'
          image: 'gcr.io/${{ env.PROJECT_ID }}/${{ env.APP }}/${{ env.APP }}:${{ github.sha }}'

      - name: Build and Push ML Backend Container
        uses: docker/build-push-action@v5
        with:
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: gcr.io/${{ env.PROJECT_ID }}/${{ env.ML_APP }}/${{ env.ML_APP }}:${{ github.sha }}
          file: ml_backend/Dockerfile
          build-args: |
            FLASK_BACKEND_URL=${{ secrets.FLASK_ML_BACKEND_URL }}
            FLASK_FRONTEND_URL=${{ secrets.FLASK_FRONTEND_URL }}
            FLASK_SECRET_KEY=${{ secrets.FLASK_SECRET_KEY }}
            FLASK_STEAM_WEB_API_KEY=${{ secrets.FLASK_STEAM_WEB_API_KEY }}
          push: true

      - name: 'Create ml release name'
        run: |-
          echo "ML_RELEASE_NAME=${{ env.ML_APP }}-${GITHUB_SHA::7}-${GITHUB_RUN_NUMBER}" >> ${GITHUB_ENV}

      - name: 'Deploy ML Backend Cloud Release'
        uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          service: '${{ env.ML_APP }}'
          region: '${{ env.REGION }}'
          tag: '${{ env.ML_RELEASE_NAME }}'
          image: 'gcr.io/${{ env.PROJECT_ID }}/${{ env.ML_APP }}/${{ env.ML_APP }}:${{ github.sha }}'

      - name: 'Report Cloud Deploy release'
        run: |-
          echo "Release url ${{ steps.release.outputs.url }} "

  BuildFrontEnd:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Build
        env:
          VITE_BACKEND_URL: ${{ secrets.FLASK_BACKEND_URL }}
          VITE_ML_BACKEND_URL: ${{ secrets.FLASK_ML_BACKEND_URL }}
        run: |
          npm i
          npm run build
        working-directory: ${{ github.workspace }}/websites/recommender-website
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ github.workspace }}/websites/recommender-website/dist

  DeployFrontEnd:
    needs: BuildFrontEnd
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy
        id: deployment
        uses: actions/deploy-pages@v4